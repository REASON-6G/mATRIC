version: '3.10'

services:
  access-5g:
    build:
      context: .
      dockerfile: access-5g/Dockerfile
    restart: always
    ports:
      - 10001:10001
      - 8081:8081

  access-wifi:
    build:
      context: .
      dockerfile: access-wifi/Dockerfile
    restart: always
    ports:
      - 10002:10002
      - 8082:8082
    volumes:
      - ./access-wifi/app:/wiremq/app

  access-lifi:
    build:
      context: .
      dockerfile: access-lifi/Dockerfile
    restart: always
    ports:
      - 10003:10003
      - 8083:8083

  access-agg:
    build:
      context: .
      dockerfile: access-aggregator/Dockerfile
    restart: always
    ports:
      - 10000:10000
    networks:
      default:
        aliases:
          - ap_aggregator

  emulate-5g:
    build:
      context: .
      dockerfile: emulator-5g/Dockerfile
    restart: always

  emulate-wifi:
    build:
      context: .
      dockerfile: emulator-wifi/Dockerfile
    restart: always

  emulate-lifi:
    build:
      context: .
      dockerfile: emulator-lifi/Dockerfile
    restart: always
    
  influxdb:
    image: influxdb:latest
#    build:
#      context: .
#      dockerfile: influxdb/Dockerfile
    restart: always
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb
#     - ./influxdb/config.yml:/etc/influxdb2/config.yml
#     - influxdb_config:/etc/influxdb2/
    env_file:
      - dbconfig.env

  grafana:
    image: grafana/grafana:latest
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin  # Default admin user, change as needed
      - GF_SECURITY_ADMIN_PASSWORD=reason  # Default admin password, change as needed
#     - GF_USERS_DEFAULT_THEME=light

  dashboard:
    build:
      context: .
      dockerfile: dashboard/Dockerfile
#    volumes:
#      - dashboard_data:/app
    restart: always
    ports:
      - 5000:5000
    links:
      - dashboarddb
    depends_on:
      - dashboarddb
      - grafana
      - influxdb
    env_file:
      - dashboard.env
    volumes:
      - ./dashboard:/app

  dashboarddb:
    image: postgres:13.2-alpine
    restart: always
    env_file:
      - dashboard.env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
volumes:
  influxdb_data:
#  influxdb_config:
  grafana_data:
  postgres_data:
  dashboard_data:

